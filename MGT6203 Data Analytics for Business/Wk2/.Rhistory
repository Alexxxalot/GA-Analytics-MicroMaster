install.packages("swirl")
library(swirl)
swirl()
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(knitr)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
install.packages(c("cluster", "Matrix", "nlme"))
unlink('DataAnalysis/Udacity/Exploratory Data Analysis/eda-course-materials/lesson2/demystifyingR2_cache', recursive = TRUE)
knit_with_parameters('~/DataAnalysis/Udacity/Exploratory Data Analysis/eda-course-materials/lesson2/demystifyingR2.Rmd')
car <- subset(mtcars, mpg >= 30 | hp < 60)
car
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
install.packages("ggplot2")
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
summary(Housing)
str(Housing)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
#table(housing[1:15,],caption='Housing Prices')
h1 <- data.frame(Housing$price, Housing$lotsize, Housing$bedrooms)
View(head(h1,15))
# some useful statistics
pp <- Housing$price
pricesd <- sd(pp)
mean(Housing$price)
median(Housing$price)
lot <- Housing$lotsize
lotsd <- sd(lot)
mean(Housing$lotsize)
median(Housing$lotsize)
res <- cor(h1)
round(res,2)
ggplot(data=Housing, aes(Housing$price)) +
geom_histogram(breaks=seq(25000, 190000, by =10000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for price") +
labs(x="price", y="Count")
ggplot(data=Housing, aes(Housing$lotsize)) +
geom_histogram(breaks=seq(0, 17000, by =1000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for lotsize") +
labs(x="lotsize", y="Count")
summary(h1)
ggpairs(h1,
upper = list(continuous = wrap("cor", size = 9)))
a.lm <- lm(formula = price ~ lotsize , data = Housing)
summary(a.lm)
anova(a.lm)
ggplot(data=h1, aes(x=lotzie,y=price))+
geom_point()
ggplot(data=h1, aes(x=lotsize,y=price))+
geom_point()
View(h1)
ggplot(data=house, aes(x=lotsize,y=price))+
geom_point()
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_line()
?geom_smooth
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm")
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm",se=False)
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm",se=FALSE)
ggplot(Housing, aes(x=lotsize, y=price)) + geom_point() +
scale_colour_hue(l=50) + # Use a slightly darker palette than normal
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) # Extend regression lines
b.lm <- lm(formula = price ~ bedrooms, data = Housing)
ggplot(Housing, aes(x=bedrooms, y=price)) + geom_point() +
scale_colour_hue(l=50) + # Use a slightly darker palette than normal
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) # Extend regression lines
ab.lm <- lm(formula = price ~ lotsize + bedrooms, data = Housing)
summary(ab.lm)
anova(ab.lm)
newdata = data.frame(lotsize=3000, bedrooms = 2)
predict(ab.lm, newdata, interval = "predict")
knit_with_parameters('~/Google Drive/Edx/ISY6501 Introduction to Analytics Modeling/ISYE6501/ISYE6501 HW Wk1 Solution.Rmd')
knit_with_parameters('~/Google Drive/Edx/ISY6501 Introduction to Analytics Modeling/ISYE6501/ISYE6501 HW Wk1 Solution.Rmd')
knitr::opts_chunk$set(echo = TRUE)
install.packages("ISLR")
library(ISLR)
data("Carseats")
str(carseats)
str(Carseats)
model_lm = lm(Sales~Price, data=Carseats)
summary(model_lm)
View(Carseats)
model_lm_2 = lm(Sales~Price, Shelveloc, data=Carseats)
?lm
model_lm_2 = lm(Sales~Price+Shelveloc, data=Carseats)
model_lm_2 = lm(Sales~Price+Shelveloc, data=Carseats)
model_lm_2 = lm(Sales~Price + ShelveLoc, data=Carseats)
summary(model_lm_2)
Carseats$ShelveGood[ShelveLoc == 'Good']=1
Carseats$ShelveGood[Carseat$ShelveLoc == 'Good']=1
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1
Carseats$ShelveBad[Carseats$ShelveLoc == 'Bad']=1
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1 else 0
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad)
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad, data=Carseats)
Carseats$ShelveGood = 0
Carseats$ShelveBad = 0
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1
Carseats$ShelveBad[Carseats$ShelveLoc == 'Bad']=1
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad, data=Carseats)
summary(model_2)
13.863824-1.862022
getcwd()
getwd()
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv')
View(df)
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv', header=True)
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv', header=TRUE)
str(df)
model_3 = lm(Qty~Price, data=df)
summary(model_3)
model_4 = lm(Qty~log(Price), data=df)
summary(model_4)
model_5 = lm(log(Qty)~(Price), data=df)
summary(model_5)
model_5 = lm(log(Qty)~Price, data=df)
summary(model_5)
model_6 = lm(log(Qty)~log(Price), data=df)
summary(model_5)
model_6 = lm(log(Qty)~log(Price), data=df)
summary(model_6)
install.packages("Ecdat")
install.packages(c("backports", "BH", "boot", "car", "carData", "caret", "cli", "clipr", "cluster", "cowplot", "curl", "data.table", "dendextend", "digest", "dplyr", "ellipsis", "evaluate", "factoextra", "FactoMineR", "fansi", "foreach", "foreign", "FrF2", "ggplot2", "ggpubr", "ggsignif", "glmnet", "haven", "hms", "htmltools", "httpuv", "igraph", "iterators", "kernlab", "KernSmooth", "knitr", "later", "latticeExtra", "lava", "leaps", "maptools", "markdown", "MASS", "Matrix", "memisc", "mgcv", "mime", "ModelMetrics", "nlme", "numbers", "partitions", "pillar", "pkgconfig", "pls", "plyr", "prettyunits", "prodlim", "promises", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "recipes", "repr", "rlang", "rmarkdown", "scales", "shiny", "sp", "SparseM", "SQUAREM", "stringi", "survival", "tibble", "tidyr", "tinytex", "vcd", "vctrs", "xfun", "zip", "zoo"))
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
library(Ecdat)
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
install.packages("car")
library(car)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
h1 <- data.frame(Housing$price, Housing$lotsize, Housing$bedrooms, Housing$bathrms)
pp <- Housing$price
pricesd <- sd(pp)
mean(Housing$price)
median(Housing$price)
lot <- Housing$lotsize
lotsd <- sd(lot)
mean(Housing$lotsize)
median(Housing$lotsize)
res <- cor(h1)
round(res,2)
ggplot(data=Housing, aes(Housing$price)) +
geom_histogram(breaks=seq(25000, 190000, by =10000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for price") +
labs(x="price", y="Count")
a.lm <- lm(formula = price ~ lotsize , data = Housing)
summary(a.lm) # what does this command do?
anova(a.lm)   # what does this command do?
R.version.string
install.packages(c("dplyr", "foreign", "gmp", "prettyunits", "repr", "rlang", "rmarkdown", "tidyr", "tidyselect", "vctrs", "yaml"))
R.version
knitr::opts_chunk$set(echo = TRUE)
library(car)
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
library(car)
update.packages(checkBuilt = TRUE)
install.packages("car", dependencies=TRUE)
library(car)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(car)
install.packages(c("Rcpp","car"))
install.packages(c("Rcpp", "car"))
install.packages(c("Rcpp", "car"))
install.packages(c("Rcpp", "car"))
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(data.table)
library(car)
install.packages(c("dplyr", "yaml"))
install.packages(c("dplyr", "yaml"))
install.packages(c("dplyr", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
install.packages("car")
install.packages("tidyverse")
library(car)
install.packages("car", dependencies = TRUE)
library(car)
library(tidyverse)
library(carData)
Salaries_Dataset <- as.tibble(carData::Salaries) #Lecture simply says "as.tibble(Salaries)"
View(Salaries_Dataset)
library(car)
install.packages("car", dependencies = TRUE)
library(car)
install.packages("psych")
load("/Users/Alex/Downloads/la_listing_full.RData")
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(tidyverse)) install.packages("tidyverse")
library(tidyverse)
getwd()
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/MS Analytics/GT OMSA/SP20 MGMT 6203/Wk2")
edsal <- read_csv("EDSAL.csv", col_types = list(
Education = col_factor(c("HS", "UG", "GRAD")),
Experience = col_integer(),
Salary = col_double()))
str(edsal)  # what happened to the first row of the csv file?
?mutate
str(edsal)
colnames(edsal)
ggplot(edsal, aes(x=Experience, y=Salary)) + geom_point() +
scale_colour_hue(l=50) +
theme(axis.text.x = element_text(size=40), axis.text.y = element_text(size=40),
axis.title=element_text(size=24,face="bold"))
RS.lm <- lm(Salary ~ Experience, data=edsal)
summary(RS.lm)
ggplot(edsal, aes(x=Experience, y=Salary)) + geom_point() +
scale_colour_hue(l=50) +
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) +
theme(axis.text.x = element_text(size=40), axis.text.y = element_text(size=40),
axis.title=element_text(size=24,face="bold"))
DR1.lm <- lm(Salary ~ HS + Graduate, data=edsal)
summary(DR1.lm)
str(edsal)
edsal<- edsal %>%
mutate(Graduate = ifelse(Education=="GRAD",1,0)) %>%
mutate(HS = ifelse(Education=="HS",1,0))
str(edsal)
DR1.lm <- lm(Salary ~ HS + Graduate, data=edsal)
summary(DR1.lm)
contrasts(edsal$Education)
?contrasts
?options
options(contrasts())
str(edsal$Education)
edsal$Education <- factor(as.character(edsal$Education), levels=c('UG','GRAD','HS'))
str(edsal$Education)
contrasts(edsal$Education)
DR1.lm <- lm(Salary ~ HS + Graduate, data=edsal)
summary(DR1.lm)
DR1a.lm <- lm(Salary ~ Education, data=edsal)
summary(DR1a.lm)
DR2.lm <- lm(Salary ~ Experience + HS + Graduate, data=edsal)
summary(DR2.lm)
plot(DR2.lm)
knitr::opts_chunk$set(echo = TRUE)
library(ISLR)
data("College")
str(College)
lm_1 <- lm(Personal~Room.Board, data=College)
summary(lm_1)
summary(lm_1)[1]
summary(lm_1)[3]
summary(lm_1)[0]
summary(lm_1)[2]
summary(lm_1)[4]
summary(lm_1)['Coefficients']
summary(lm_1)[6]
summary(lm_1)[7]
summary(lm_1)[8]
summary(lm_1)[9]
summary(lm_1)$r.square
summary(lm_1)$r.adjusted.square
summary(lm_1)$adjusted.rsquare
summary(lm_1)$r.square
summary(lm_1)[9]
summary(lm_1)[8]
summary(lm_1)[9]
summary(lm_1)[8,9]
summary(lm_1)[8]
summary(lm_1)[9]
lm_2.1 <- lm(Personal~log(Room.Board), data=College)
summary(lm_2.1)$adj.r.squared
# Linear-log
lm_2.1 <- lm(Personal~log(Room.Board), data=College)
summary(lm_2.1)[9]
# Log-Linear
lm_2.2 <- lm(log(Personal)~Room.Board, data=College)
summary(lm_2.2)[9]
# Log-log
lm_2.3 <- lm(log(Personal)~log(Room.Board), data=College)
summary(lm_2.3)[9]
admit_df <- read.csv('binary.csv', head=TRUE)
str(admit_df)
?glm
lm_log <- glm(admit~gre+gpa, data=admit_df, family="binomial")
summary(lm_log)
?prediction
install.packages(c("ggExtra", "ROCR"))
?prediction
??prediction
admit_df <-  admit_df %>%
mutate(pred_prob_model4 = predict(lm_log, newdata = ., type = "response")) %>%
mutate(pred_outcome_model4 = ifelse(pred_prob_model4 >= 0.5,1,0))
pred <- prediction(admit_df$pred_prob_model4,admit_df$admit) # create a prediction object in R
library("ROCR")
pred <- prediction(admit_df$pred_prob_model4,admit_df$admit) # create a prediction object in R
class(pred)
perf <- performance(pred, "tpr", "fpr") # tpr and fpr are true and false positive rates
plot(perf, colorize=T)
auc.perf <-  performance(pred, measure = "auc")
auc.perf@y.values
bk <- read.csv("Berkshire.csv", head=TRUE)
str(bk)
sd(bk$BrkRet)
sd(bk$BrkRet, na.rm=TRUE)
mean(bk$BrkRet, na.rm=TRUE)
sd(bk$MKT, na.rm=TRUE)
library(xts)
library(PerformanceAnalytics)
View(bk)
bk$Date <- mdy(bk$Date)
?mdy
library(lubridate)
bk$Date <- mdy(bk$Date)
df_bk <- xts(dbk[,-1],order.by= bk[,1],)
df_bk <- xts(bk[,-1],order.by= bk[,1],)
Return.cumulative(df_bk, geometric =TRUE)
chart.CumReturns(df_bk, wealth.index =FALSE, geometric = TRUE, legend.loc='topleft')
(4143.99-96.22392)/500
(4143.99-96.22392)/500
SharpeRatio(df_bk$BrkRet, df_bk$RF)
SharpeRatio(df_bk df_bk$RF)
SharpeRatio(df_bk, df_bk$RF)
HT <- read.csv("Factor_HiTec.csv", head=TRUE)
str(HT)
install.packages("stargazer")
library(stargazer)
lm_factor6 <- lm(data=HT, HiTec ~ Mkt_rf+SMB+HML+Mom+BAB+QMJ)
summary(lm_factor6)
UK <- read.csv('UPS_KO.csv', head=TRUE)
str(UK)
?mdy
?ym
?ymd
UK$Date_x <- ymd(UK$Date)
UK$Date_x <- as.POSIXct(UK$Date, format = "%Y%m")
str(UK)
UK <- read.csv('UPS_KO.csv', head=TRUE)
str(UK)
UK$Date <- as.POSIXct(UK$Date, format = "%Y%m")
?parse_date
UK$Date <- parse_date(UK$Date, format = "%Y%m")
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
str(UK)
UK <- read.csv('UPS_KO.csv', head=TRUE)
str(UK)
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
str(UK)
df_UK <- UK[order(Date)]
df_UK <- UK[order(UK$Date)]
df_UK <- UK[order(UK$Date),]
View(df_UK)
lm_3 <- lm(data=UK, UPS~Mkt_RF+SMB+HML)
summary(lm_3)
Return.calculate(df_bk, geometric =TRUE)
?Return.calculate
Return.calculate(df_bk, method=c("discrete", "log", "difference"))
table.Stats(df_bk$BrkRet)
table.Stats(df_bk)
table.Stats(UK)
table.Stats(UK$UPS)
table.Stats(UK$KO)
Return.cumulative(UK)
Return.cumulative(UK,wealth.index = FALSE, geometric = TRUE
Return.cumulative(UK,wealth.index = FALSE, geometric = TRUE)
Return.cumulative(UK, wealth.index = FALSE, geometric = TRUE)
Return.cumulative(UK$UPS, wealth.index = FALSE, geometric = TRUE)
lm_4 <- lm(data=UK, KO~Mkt_RF+SMB+HML)
summary(lm_4)
head(UK)
df_UK <- xts(UK[:-1], order.by= UK[,1],)
df_UK <- xts(UK[,-1], order.by= UK[,1],)
Return.cumulative([df_UK$UPS, df_UK$KO], geometric = TRUE)
Return.cumulative(df_UK$UPS, geometric = TRUE)
Return.cumulative(c(df_UK$UPS, df_UK$KO), geometric = TRUE)
df_UK <- xts(UK[,-1], order.by= UK[,1],)
Return.cumulative(df_UK, geometric = TRUE)
0.5518995-0.4195057
(0.5518995-0.4195057)/60
