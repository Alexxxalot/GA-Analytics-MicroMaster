install.packages("swirl")
library(swirl)
swirl()
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library(knitr)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
install.packages(c("cluster", "Matrix", "nlme"))
unlink('DataAnalysis/Udacity/Exploratory Data Analysis/eda-course-materials/lesson2/demystifyingR2_cache', recursive = TRUE)
knit_with_parameters('~/DataAnalysis/Udacity/Exploratory Data Analysis/eda-course-materials/lesson2/demystifyingR2.Rmd')
car <- subset(mtcars, mpg >= 30 | hp < 60)
car
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
ggplot(aes(x = gender, y = age),
data = subset(pf, !is.na(gender))) + geom_histogram()
install.packages("ggplot2")
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
summary(Housing)
str(Housing)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
#table(housing[1:15,],caption='Housing Prices')
h1 <- data.frame(Housing$price, Housing$lotsize, Housing$bedrooms)
View(head(h1,15))
# some useful statistics
pp <- Housing$price
pricesd <- sd(pp)
mean(Housing$price)
median(Housing$price)
lot <- Housing$lotsize
lotsd <- sd(lot)
mean(Housing$lotsize)
median(Housing$lotsize)
res <- cor(h1)
round(res,2)
ggplot(data=Housing, aes(Housing$price)) +
geom_histogram(breaks=seq(25000, 190000, by =10000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for price") +
labs(x="price", y="Count")
ggplot(data=Housing, aes(Housing$lotsize)) +
geom_histogram(breaks=seq(0, 17000, by =1000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for lotsize") +
labs(x="lotsize", y="Count")
summary(h1)
ggpairs(h1,
upper = list(continuous = wrap("cor", size = 9)))
a.lm <- lm(formula = price ~ lotsize , data = Housing)
summary(a.lm)
anova(a.lm)
ggplot(data=h1, aes(x=lotzie,y=price))+
geom_point()
ggplot(data=h1, aes(x=lotsize,y=price))+
geom_point()
View(h1)
ggplot(data=house, aes(x=lotsize,y=price))+
geom_point()
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_line()
?geom_smooth
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm")
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm",se=False)
ggplot(data=Housing, aes(x=lotsize,y=price))+
geom_point()+
geom_smooth(method="lm",se=FALSE)
ggplot(Housing, aes(x=lotsize, y=price)) + geom_point() +
scale_colour_hue(l=50) + # Use a slightly darker palette than normal
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) # Extend regression lines
b.lm <- lm(formula = price ~ bedrooms, data = Housing)
ggplot(Housing, aes(x=bedrooms, y=price)) + geom_point() +
scale_colour_hue(l=50) + # Use a slightly darker palette than normal
geom_smooth(method=lm,   # Add linear regression lines
se=FALSE,    # Don't add shaded confidence region
fullrange=TRUE) # Extend regression lines
ab.lm <- lm(formula = price ~ lotsize + bedrooms, data = Housing)
summary(ab.lm)
anova(ab.lm)
newdata = data.frame(lotsize=3000, bedrooms = 2)
predict(ab.lm, newdata, interval = "predict")
knit_with_parameters('~/Google Drive/Edx/ISY6501 Introduction to Analytics Modeling/ISYE6501/ISYE6501 HW Wk1 Solution.Rmd')
knit_with_parameters('~/Google Drive/Edx/ISY6501 Introduction to Analytics Modeling/ISYE6501/ISYE6501 HW Wk1 Solution.Rmd')
knitr::opts_chunk$set(echo = TRUE)
install.packages("ISLR")
library(ISLR)
data("Carseats")
str(carseats)
str(Carseats)
model_lm = lm(Sales~Price, data=Carseats)
summary(model_lm)
View(Carseats)
model_lm_2 = lm(Sales~Price, Shelveloc, data=Carseats)
?lm
model_lm_2 = lm(Sales~Price+Shelveloc, data=Carseats)
model_lm_2 = lm(Sales~Price+Shelveloc, data=Carseats)
model_lm_2 = lm(Sales~Price + ShelveLoc, data=Carseats)
summary(model_lm_2)
Carseats$ShelveGood[ShelveLoc == 'Good']=1
Carseats$ShelveGood[Carseat$ShelveLoc == 'Good']=1
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1
Carseats$ShelveBad[Carseats$ShelveLoc == 'Bad']=1
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1 else 0
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad)
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad, data=Carseats)
Carseats$ShelveGood = 0
Carseats$ShelveBad = 0
Carseats$ShelveGood[Carseats$ShelveLoc == 'Good']=1
Carseats$ShelveBad[Carseats$ShelveLoc == 'Bad']=1
model_2 = lm(Sales ~ Price + ShelveGood + ShelveBad, data=Carseats)
summary(model_2)
13.863824-1.862022
getcwd()
getwd()
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv')
View(df)
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv', header=True)
df = read.csv('/Users/Alex/Downloads/PriceDemand.csv', header=TRUE)
str(df)
model_3 = lm(Qty~Price, data=df)
summary(model_3)
model_4 = lm(Qty~log(Price), data=df)
summary(model_4)
model_5 = lm(log(Qty)~(Price), data=df)
summary(model_5)
model_5 = lm(log(Qty)~Price, data=df)
summary(model_5)
model_6 = lm(log(Qty)~log(Price), data=df)
summary(model_5)
model_6 = lm(log(Qty)~log(Price), data=df)
summary(model_6)
install.packages("Ecdat")
install.packages(c("backports", "BH", "boot", "car", "carData", "caret", "cli", "clipr", "cluster", "cowplot", "curl", "data.table", "dendextend", "digest", "dplyr", "ellipsis", "evaluate", "factoextra", "FactoMineR", "fansi", "foreach", "foreign", "FrF2", "ggplot2", "ggpubr", "ggsignif", "glmnet", "haven", "hms", "htmltools", "httpuv", "igraph", "iterators", "kernlab", "KernSmooth", "knitr", "later", "latticeExtra", "lava", "leaps", "maptools", "markdown", "MASS", "Matrix", "memisc", "mgcv", "mime", "ModelMetrics", "nlme", "numbers", "partitions", "pillar", "pkgconfig", "pls", "plyr", "prettyunits", "prodlim", "promises", "purrr", "quantreg", "R6", "Rcpp", "RcppEigen", "recipes", "repr", "rlang", "rmarkdown", "scales", "shiny", "sp", "SparseM", "SQUAREM", "stringi", "survival", "tibble", "tidyr", "tinytex", "vcd", "vctrs", "xfun", "zip", "zoo"))
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
library(Ecdat)
if (!require(Ecdat)) install.packages("Ecdat")
library(Ecdat)
if (!require(ggplot2)) install.packages("ggplot2")
library(ggplot2)
if (!require(ISLR)) install.packages("ISLR")
library(ISLR)
if (!require(GGally)) install.packages("GGally")
library(GGally)
if (!require(car)) install.packages("car")
library(car)
install.packages("car")
library(car)
?Housing
summary(Housing)
str(Housing)
View(head(Housing,10))
h1 <- data.frame(Housing$price, Housing$lotsize, Housing$bedrooms, Housing$bathrms)
pp <- Housing$price
pricesd <- sd(pp)
mean(Housing$price)
median(Housing$price)
lot <- Housing$lotsize
lotsd <- sd(lot)
mean(Housing$lotsize)
median(Housing$lotsize)
res <- cor(h1)
round(res,2)
ggplot(data=Housing, aes(Housing$price)) +
geom_histogram(breaks=seq(25000, 190000, by =10000),
col="red",
fill="green",
alpha = .2) +
labs(title="Histogram for price") +
labs(x="price", y="Count")
a.lm <- lm(formula = price ~ lotsize , data = Housing)
summary(a.lm) # what does this command do?
anova(a.lm)   # what does this command do?
R.version.string
install.packages(c("dplyr", "foreign", "gmp", "prettyunits", "repr", "rlang", "rmarkdown", "tidyr", "tidyselect", "vctrs", "yaml"))
R.version
knitr::opts_chunk$set(echo = TRUE)
library(car)
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
install.packages("data.table")
library(car)
update.packages(checkBuilt = TRUE)
install.packages("car", dependencies=TRUE)
library(car)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(car)
install.packages(c("Rcpp","car"))
install.packages(c("Rcpp", "car"))
install.packages(c("Rcpp", "car"))
install.packages(c("Rcpp", "car"))
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(data.table)
library(car)
install.packages(c("dplyr", "yaml"))
install.packages(c("dplyr", "yaml"))
install.packages(c("dplyr", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
install.packages("car")
install.packages("tidyverse")
library(car)
install.packages("car", dependencies = TRUE)
library(car)
library(tidyverse)
library(carData)
Salaries_Dataset <- as.tibble(carData::Salaries) #Lecture simply says "as.tibble(Salaries)"
View(Salaries_Dataset)
library(car)
install.packages("car", dependencies = TRUE)
library(car)
install.packages("psych")
knitr::opts_chunk$set(echo = TRUE)
nthroot(0.5518995+1,60)-nthroot(0.4195057+1,60)
?nthroot
?root
?*root
?lm
?sqrt
?nthroot
setwd('/Users/alex/Library/Mobile Documents/com~apple~CloudDocs/MS Analytics/GT OMSA/SP20 MGMT 6203/Wk6/')
library(PerformanceAnalytics)
library(xts)
library(lubridate)
fund <- read.csv("contrafund.csv")
fund$Date <- mdy(fund$Date)
#Sorting data by dates
fund2<- fund[order(fund$Date),]
fund2[,-1]
All.dat <- xts(fund2[,-1],order.by = fund2[,1],)
Return.cumulative(All.dat$ContraRet,geometric = TRUE)
chart.CumReturns(All.dat$ContraRet,wealth.index = FALSE, geometric = TRUE)
table.Stats(All.dat$ContraRet)
UK <- read.csv('UPS_KO.csv', head=TRUE)
str(UK)
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
UK <- read.csv('UPS_KO.csv', head=TRUE)
str(UK)
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
library("ROCR")
library(xts)
library(PerformanceAnalytics)
library(lubridate)
library(stargazer)
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
?parse_date_time
UK$Date <- parse_date_time(as.character(UK$Date), format = "%Y%m")
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
lm_3 <- lm(data=UK, UPS~Mkt_RF+SMB+HML)
summary(lm_3)
df_UK <- xts(UK[,-1], order.by= UK[,1],)
library(tidyverse)
UK$Date <- parse_date(as.character(UK$Date), format = "%Y%m")
str(UK)
df_UK <- UK[order(UK$Date),]
lm_3 <- lm(data=UK, UPS~Mkt_RF+SMB+HML)
summary(lm_3)
lm_4 <- lm(data=UK, KO~Mkt_RF+SMB+HML)
summary(lm_4)
df_UK <- xts(UK[,-1], order.by= UK[,1],)
Return.cumulative(df_UK, geometric = TRUE)
chart.CumReturns(df_UK)
table.Stats(df_UK)
?table.Stats
(0.5518995-0.4195057)/60
View(df_UK)
knitr::opts_chunk$set(echo = TRUE)
9.12*10**(-4)*45*1000+1.95*10**(-2)*1000
1.95*10**(-2)*1000
45000*9.12*0.0004
45000*9.12*0.0001
59.5-19.5
65.5-19.5
(65.5-19.5)/9.12/0.0001
(65.5-19.5)/45/1000
9.12*10**(-4)*45*1000+1.95*10**(-2)*1000
